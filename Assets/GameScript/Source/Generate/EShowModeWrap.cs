//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EShowModeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(EShowMode));
		L.RegVar("None", get_None, null);
		L.RegVar("HideOther", get_HideOther, null);
		L.RegVar("NeedBack", get_NeedBack, null);
		L.RegVar("NoNeedBack", get_NoNeedBack, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_None(IntPtr L)
	{
		ToLua.Push(L, EShowMode.None);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HideOther(IntPtr L)
	{
		ToLua.Push(L, EShowMode.HideOther);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NeedBack(IntPtr L)
	{
		ToLua.Push(L, EShowMode.NeedBack);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NoNeedBack(IntPtr L)
	{
		ToLua.Push(L, EShowMode.NoNeedBack);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		EShowMode o = (EShowMode)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

