//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class NetCore_PackProtocolWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(NetCore.PackProtocol), typeof(System.Object));
		L.RegFunction("signByteStream", signByteStream);
		L.RegFunction("resetSN", resetSN);
		L.RegFunction("New", _CreateNetCore_PackProtocol);
		L.RegFunction("__tostring", Lua_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateNetCore_PackProtocol(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				NetCore.PackProtocol obj = new NetCore.PackProtocol();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: NetCore.PackProtocol.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int signByteStream(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(NetCore.PackProtocol), typeof(NetCore.ByteArray)))
			{
				NetCore.PackProtocol obj = (NetCore.PackProtocol)ToLua.ToObject(L, 1);
				NetCore.ByteArray arg0 = (NetCore.ByteArray)ToLua.ToObject(L, 2);
				NetCore.ByteArray o = obj.signByteStream(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(NetCore.PackProtocol), typeof(byte), typeof(byte), typeof(byte[])))
			{
				NetCore.PackProtocol obj = (NetCore.PackProtocol)ToLua.ToObject(L, 1);
				byte arg0 = (byte)LuaDLL.lua_tonumber(L, 2);
				byte arg1 = (byte)LuaDLL.lua_tonumber(L, 3);
				byte[] arg2 = ToLua.CheckByteBuffer(L, 4);
				NetCore.ByteArray o = obj.signByteStream(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: NetCore.PackProtocol.signByteStream");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int resetSN(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			NetCore.PackProtocol obj = (NetCore.PackProtocol)ToLua.CheckObject(L, 1, typeof(NetCore.PackProtocol));
			obj.resetSN();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}
}

