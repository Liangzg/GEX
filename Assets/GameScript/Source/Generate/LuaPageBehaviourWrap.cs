//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaPageBehaviourWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaPageBehaviour), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("OnShow", OnShow);
		L.RegFunction("OnHide", OnHide);
		L.RegFunction("OnDestroy", OnDestroy);
		L.RegFunction("AddClick", AddClick);
		L.RegFunction("AddToggleChange", AddToggleChange);
		L.RegFunction("AddInputFieldChanged", AddInputFieldChanged);
		L.RegFunction("AddInputFieldSubmit", AddInputFieldSubmit);
		L.RegFunction("AddSliderValueChange", AddSliderValueChange);
		L.RegFunction("AddScrollderbarValueChange", AddScrollderbarValueChange);
		L.RegFunction("AddOnDown", AddOnDown);
		L.RegFunction("AddOnUp", AddOnUp);
		L.RegFunction("AddOnDrag", AddOnDrag);
		L.RegFunction("AddOnEndDrag", AddOnEndDrag);
		L.RegFunction("AddOnEnter", AddOnEnter);
		L.RegFunction("AddOnExit", AddOnExit);
		L.RegFunction("AddOnDrop", AddOnDrop);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("Name", get_Name, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnShow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UIPage arg0 = (UIPage)ToLua.CheckObject(L, 2, typeof(UIPage));
			object arg1 = ToLua.ToVarObject(L, 3);
			obj.OnShow(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnHide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			obj.OnHide();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			obj.OnDestroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddClick(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddToggleChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddToggleChange(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddInputFieldChanged(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddInputFieldChanged(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddInputFieldSubmit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddInputFieldSubmit(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddSliderValueChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddSliderValueChange(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddScrollderbarValueChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddScrollderbarValueChange(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnDown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddOnDown(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnUp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddOnUp(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddOnDrag(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnEndDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddOnEndDrag(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddOnEnter(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnExit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddOnExit(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnDrop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPageBehaviour obj = (LuaPageBehaviour)ToLua.CheckObject(L, 1, typeof(LuaPageBehaviour));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddOnDrop(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaPageBehaviour obj = (LuaPageBehaviour)o;
			string ret = obj.Name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Name on a nil value" : e.Message);
		}
	}
}

